version: '2.4'
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    # questo comando in windows non è sempre funzionante al 100% (nel mio caso non funziona).
    # Si può forzare il meccanismo legacy per rilevare cambiamenti ai files con il flag -L 
    # che sfrutta un semplice meccanismo di polling
    command: ../node_modules/.bin/nodemon -L --inspect=0.0.0.0:9229 ./bin/www
    ports:
      - "8080:3000"
      - "9229:9229" # questa porta serve per nodemon
    volumes:
      - ./server:/opt/node_app/app 
      - ./server/package.json:/opt/node_app/package.json
      - ./server/package-lock.json:/opt/node_app/package-lock.json 
      # in questo modo i node_modules non verranno salvati nell'host 
      # nel caso in cui sia necessario averli entrambi (!RICORDARE DI ELIMINARE QUESTO VOLUME QUANDO FINITO)
      - notused:/opt/node_app/app/node_modules
    environment:
      - NODE_ENV=development
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=example
      - MONGO_HOSTNAME=database
      - MONGO_PORT=27017
      - MONGO_DATABASE_NAME=example-database
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      disable: true
    networks:
      - backend
      - frontend_net

  database:
    image: mongo:5
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=example-database
    volumes:
      - ./mongodb/seed.js:/docker-entrypoint-initdb.d/seed.js
    healthcheck:
      test: "[ `echo 'db.runCommand(\"ping\").ok' | mongo localhost/example-database --quiet` ] && echo 0 || echo 1"
      interval: 5s
      start_period: 10s
      timeout: 4s
      retries: 3
    networks:
      - backend

  frontend:
    build:
      context: ./frontend/interrogator
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    ports:
      - "80:4000"
    volumes:
      - ./frontend/interrogator:/opt/node_app/app 
      - ./frontend/interrogator/package.json:/opt/node_app/package.json
      - ./frontend/interrogator/package-lock.json:/opt/node_app/package-lock.json 
      # in questo modo i node_modules non verranno salvati nell'host 
      # nel caso in cui sia necessario averli entrambi (!RICORDARE DI ELIMINARE QUESTO VOLUME QUANDO FINITO)
      - notused_interrogator:/opt/node_app/app/node_modules
    healthcheck:
      disable: true
    networks:
      - frontend_net

volumes:
  notused:
  notused_interrogator:

networks:
  backend:
    driver: bridge
  frontend_net:
    driver: bridge
